{"abi":[{"type":"function","name":"tokensToSend","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"userData","type":"bytes","internalType":"bytes"},{"name":"operatorData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"tokensToSend(address,address,address,uint256,bytes,bytes)":"75ab9782"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/openzeppelin-contracts-upgradeable/token/ERC777/IERC777SenderUpgradeable.sol\":\"IERC777SenderUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-ctf/=lib/forge-ctf/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/openzeppelin-contracts-upgradeable/token/ERC777/IERC777SenderUpgradeable.sol\":{\"keccak256\":\"0x79fc5ced00b0715d84b75e016754292e434cf2cbbc58c1f275ef0754653a6d78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9c65cf56b27e227404a28cf0c080ce4ba6a3d739a4a7013a667f970a01713ab\",\"dweb:/ipfs/QmRxW9cuDo8gMDvpieVFys5qCnVihWnznomn4xiE1CrRQF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.13+commit.abaa5c0e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"tokensToSend"}],"devdoc":{"kind":"dev","methods":{"tokensToSend(address,address,address,uint256,bytes,bytes)":{"details":"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","forge-ctf/=lib/forge-ctf/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/openzeppelin-contracts-upgradeable/token/ERC777/IERC777SenderUpgradeable.sol":"IERC777SenderUpgradeable"},"evmVersion":"london","libraries":{}},"sources":{"src/openzeppelin-contracts-upgradeable/token/ERC777/IERC777SenderUpgradeable.sol":{"keccak256":"0x79fc5ced00b0715d84b75e016754292e434cf2cbbc58c1f275ef0754653a6d78","urls":["bzz-raw://b9c65cf56b27e227404a28cf0c080ce4ba6a3d739a4a7013a667f970a01713ab","dweb:/ipfs/QmRxW9cuDo8gMDvpieVFys5qCnVihWnznomn4xiE1CrRQF"],"license":"MIT"}},"version":1},"id":145}