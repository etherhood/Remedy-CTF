{"abi":[{"type":"function","name":"onTransferReceived","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onTransferReceived(address,address,uint256,bytes)":"88a7ca5c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.\",\"params\":{\"data\":\"bytes Additional data with no specified format\",\"from\":\"address The address which are token transferred from\",\"operator\":\"address The address which called `transferAndCall` or `transferFromAndCall` function\",\"value\":\"uint256 The amount of tokens transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))`  unless throwing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of ERC1363 tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/openzeppelin-contracts-upgradeable/interfaces/IERC1363ReceiverUpgradeable.sol\":\"IERC1363ReceiverUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-ctf/=lib/forge-ctf/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/openzeppelin-contracts-upgradeable/interfaces/IERC1363ReceiverUpgradeable.sol\":{\"keccak256\":\"0x8dca5a1d3f90a7b77390641efae881497009eaec47a81d88180dd138af651d89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60b4a63e53e0dc6d9ecb9a17f653f3396b39fd1eb5e3e43b00d296baa9cacb90\",\"dweb:/ipfs/QmVD3ghhrXadAGQv6JjJFEBfxmnjwfh2N38WR7xJpEH8zL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.13+commit.abaa5c0e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onTransferReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]}],"devdoc":{"kind":"dev","methods":{"onTransferReceived(address,address,uint256,bytes)":{"details":"Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.","params":{"data":"bytes Additional data with no specified format","from":"address The address which are token transferred from","operator":"address The address which called `transferAndCall` or `transferFromAndCall` function","value":"uint256 The amount of tokens transferred"},"returns":{"_0":"`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`  unless throwing"}}},"version":1},"userdoc":{"kind":"user","methods":{"onTransferReceived(address,address,uint256,bytes)":{"notice":"Handle the receipt of ERC1363 tokens"}},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","forge-ctf/=lib/forge-ctf/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/openzeppelin-contracts-upgradeable/interfaces/IERC1363ReceiverUpgradeable.sol":"IERC1363ReceiverUpgradeable"},"evmVersion":"london","libraries":{}},"sources":{"src/openzeppelin-contracts-upgradeable/interfaces/IERC1363ReceiverUpgradeable.sol":{"keccak256":"0x8dca5a1d3f90a7b77390641efae881497009eaec47a81d88180dd138af651d89","urls":["bzz-raw://60b4a63e53e0dc6d9ecb9a17f653f3396b39fd1eb5e3e43b00d296baa9cacb90","dweb:/ipfs/QmVD3ghhrXadAGQv6JjJFEBfxmnjwfh2N38WR7xJpEH8zL"],"license":"MIT"}},"version":1},"id":66}